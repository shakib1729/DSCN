#include <iostream>
using namespace std;








#include<queue>
#include<math.h>

void findMedian(int arr[], int n){
  
   priority_queue<int, vector<int>, greater<int>> pqMin;
   priority_queue<int> pqMax;
   pqMax.push(arr[0]);
   cout<<arr[0]<<endl;
   
   for(int i=1; i<n; i++){
     
     if(arr[i] > pqMax.top())
       pqMin.push(arr[i]);
     else
       pqMax.push(arr[i]);
     
     if(fabs(pqMin.size() - pqMax.size()) > 1){
       if(pqMin.size() > pqMax.size()){
         pqMax.push(pqMin.top());
         pqMin.pop();
       }
       else{
         pqMin.push(pqMax.top());
         pqMax.pop();
       }
     }
     
     if(pqMin.size() > pqMax.size())
       cout<<pqMin.top();
     else if(pqMin.size() < pqMax.size())
       cout<<pqMax.top();
     else
       cout<<(pqMin.top()+pqMax.top())/2;
     cout<<endl;
   }

}












int main(){
    int n;
    cin >> n;
    int *arr = new int[n];
    for(int i = 0; i < n; i++){
        cin>>arr[i];
    }
    findMedian(arr, n);
    
    delete [] arr;
    
}
