#include <iostream>
using namespace std;

int subset(int decided[], int decidedSize, int undecided[], int undecidedSize, int output[][20], int outputSize) {
  
  if(undecidedSize == 0){
     output[outputSize][0] = decidedSize;
     for(int i=0; i<decidedSize; i++)
       output[outputSize][i+1] = decided[i];
     return outputSize+1;
   }
  
  outputSize = subset(decided, decidedSize, undecided+1, undecidedSize-1, output, outputSize);
  decided[decidedSize++] = undecided[0];
  outputSize = subset(decided, decidedSize, undecided+1, undecidedSize-1, output, outputSize);
  return outputSize;
}


int subset(int input[], int n, int output[][20]) {
  int decided[n]; 
 return subset(decided, 0, input, n, output, 0);
 
}

// int subset(int input[], int n, int output[][20]) {
//     if(n == 0){
//       output[0][0]=0;
//       return 1;
//     }
//    int count = subset(input + 1, n-1, output);
   
//    for(int i=0; i<count; i++){
//      output[count + i][0] = output[i][0] + 1;
//      output[count + i][1] = input[0];
//      for(int j=1; j<=output[i][0]; j++)
//        output[count + i][j + 1] = output[i][j]; 
//    }
//   return count*2;
 
// }



int main() {
  int input[20],length, output[35000][20];
  cin >> length;
  for(int i=0; i < length; i++)
    cin >> input[i];
  
  int size = subset(input, length, output);

  for( int i = 0; i < size; i++) { 
	for( int j = 1; j <= output[i][0]; j++) { 
		cout << output[i][j] << " ";
    }
    cout << endl;
  }
}
