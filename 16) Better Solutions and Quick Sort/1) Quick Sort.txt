#include<iostream>
#include<algorithm>
using namespace std;

void quickSort(int arr[], int start,int end){
  if(start>=end)
    return;
  int pivot=start,count=0;
  
  for(int i=start+1;i<=end;i++)
    if(arr[i]<arr[pivot])
      count++;
  
  pivot+=count;
  swap<int> (arr[start],arr[pivot]);
  
  int left=start,right=end;
  while(left<=right){
    if(arr[left] < arr[pivot])
      left++;
    else if(arr[right] >= arr[pivot])
      right--;
    else
      swap<int> (arr[left++],arr[right--]);
  }
  quickSort(arr,pivot+1,end);
  quickSort(arr,start,pivot-1);
}


void quickSort(int input[], int size) {
  quickSort(input,0,size-1);
}


int main(){
    int n;
    cin >> n;
  
    int *input = new int[n];
    
    for(int i = 0; i < n; i++) {
        cin >> input[i];
    }
    
    quickSort(input, n);
    for(int i = 0; i < n; i++) {
        cout << input[i] << " ";
    }
    
    delete [] input;

}
