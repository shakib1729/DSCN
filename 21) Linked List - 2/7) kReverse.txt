//Implement kReverse(int k) i.e. you reverse first k elements then reverse next k elements and so on
#include <iostream>
using namespace std;

class node{
public:
    int data;
    node * next;
    node(int data){
        this->data=data;
        this->next=NULL;
    }
};





node *reverse(node *head){
  node *prev=nullptr,*current=head,*save;
  
  while(current!=nullptr){
    save=current->next;
    current->next=prev;
    prev=current;
    current=save;
  }
  head=prev;
  return head;
}

node* kReverse(node*head,int n)
{
  if(n<=1 or head==nullptr or head->next==nullptr)
    return head;
  node *curr=head;
  for(int i=0;i<n-1 and curr!=nullptr;i++){
    curr=curr->next;
  }
  if(curr==nullptr || curr->next==nullptr){
    head=reverse(head);
    return head;
  }
    
  node *prev=curr,*save=curr->next;
  prev->next=nullptr;
  prev=head;
  head=reverse(head);
  prev->next=save;
  curr=prev->next;
  node*head2=curr;
  int count=1;
  while(curr!=nullptr){
    
    if(count%n==0){
     // prev=curr;
      save=curr->next;
      curr->next=nullptr;
     // prev=head2;
      node *prev2=head2;
      head2=reverse(head2);
      prev->next=head2;
      prev=prev2;
      prev->next=save;
      curr=save;
      head2=save;
    }
    else
     curr=curr->next;
    count++;
  }
 
  if(head2!=nullptr and head2->next!=nullptr){
    node *temp=head2;
    head2=reverse(head2);
    prev->next=head2;
    temp->next=nullptr;
  }
   
    
  return head;
}







node* takeinput(){
    int data;
    cin>>data;
    node* head=NULL,*tail=NULL;
    while(data!=-1){
        node *newnode=new node(data);
        if(head==NULL)                  {
            head=newnode;
            tail=newnode;
        }
        else{
            tail->next=newnode;
            tail=newnode;
        }
        cin>>data;
    }
    return head;
}
void print(node *head)
{
    node*temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}
int main()
{
    node* head=takeinput();
    int n;
    cin>>n;
    head=kReverse(head,n);
    print(head);
    return 0;
}
