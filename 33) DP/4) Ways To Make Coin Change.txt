#include<iostream>
using namespace std;




int dp[11][1001];

int countWaysToMakeChangeX(int denominations[], int numDenominations, int value){
    if(numDenominations == 0 or value < 0)
        return 0;
    if(value == 0)
        return 1;
    if(dp[numDenominations][value] != -1)
        return dp[numDenominations][value];
    
    dp[numDenominations][value] = countWaysToMakeChangeX(denominations, numDenominations, value-denominations[0])
                                 + countWaysToMakeChangeX(denominations+1, numDenominations-1, value);
     return dp[numDenominations][value];
}

int countWaysToMakeChange(int denominations[], int numDenominations, int value){
   for(int i=0; i<11; i++)
       for(int j=0; j<1001; j++)
           dp[i][j] = -1;
    
    return countWaysToMakeChangeX(denominations, numDenominations, value);
}







int main(){

  int numDenominations;
  cin >> numDenominations;
  int* denominations = new int[numDenominations];
  for(int i = 0; i < numDenominations; i++){
    cin >> denominations[i];
  }
  int value;
  cin >> value;

  cout << countWaysToMakeChange(denominations, numDenominations, value);

}


