#include <iostream>
#include <vector>
#include <queue>
using namespace std;

void bftActualWork(int **adj, int V, int start, vector<bool> &visited){
    queue<int> q;
   q.push(start);
  visited[start] = true;
  
  while(!q.empty()){
    int curr = q.front();
    q.pop();
    cout<<curr<<' ';
    for(int i=0; i<V; i++)
      if(adj[curr][i] == 1 and visited[i] == false){
        q.push(i);
        visited[i] = true;
      }
  }
  
}

void bft(int **adj, int V, int start){

  vector<bool> visited(V, false);
  bftActualWork(adj, V, 0, visited);
  
//   for(int i=0; i<visited.size(); i++)
//     if(visited[i] == false)
//       bftActualWork(adj, V, i, visited);
 
  
}


int main() {
    int V, E;
    cin >> V >> E;
    
   int **adj = new int*[V];
   for(int i=0; i<V; i++){
      adj[i] = new int[V];
      for(int j=0; j<V; j++)
        adj[i][j] = 0;
   }
    for(int i=0; i<E; i++){
      int a,b;
      cin>>a>>b;
      adj[a][b] = adj[b][a] = 1;
    }
  
    bft(adj, V, 0);

  return 0;
}
