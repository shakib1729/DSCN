//Implement code to swap two elements of a Linked List. You need to swap the nodes not the data
#include <iostream>
using namespace std;

class node{
public:
    int data;
    node * next;
    node(int data){
        this->data=data;
        this->next=NULL;
    }
};





node* swap_nodes(node *head,int i,int j)
{
    int small,big;
   if(i<=j){
     small=i;
     big=j;
   }
  else{
    small=j;
    big=i;
  }
  node *prev1=head,*curr1=head,*save1=head,*prev2=head,*curr2=head,*save2=head;
  
  for(int i=0;i<small-1;i++)
    prev1=prev1->next;
  
  curr1=prev1->next;
  if(small==0)
    curr1=head;
  save1=curr1->next;
  
  for(int i=0;i<big-1;i++)
    prev2=prev2->next;
  
  curr2=prev2->next;
  save2=curr2->next;
  
 // cout<<curr1->data<<" "<<save1->data<<" "<<prev2->data<<" "<<save2->data<<endl;
  
  if(small==0 && big!=1){
    curr1=head;
    curr1->next=save2;
    prev2->next=curr1;
    curr2->next=save1;
    head=curr2;
    return head;
  }
  
  if(small==0 && big==1){
    curr2->next=curr1;
    curr1->next=save2;
    head=curr2;
    return head;
  }
  
  if(save1==curr2){
    prev1->next=curr2;
    curr2->next=curr1;
    curr1->next=save2;
    return head;
  }
  
  
  prev1->next=curr2;
  curr2->next=save1;
  prev2->next=curr1;
  curr1->next=save2;
  
  return head;

}







node* takeinput(){
    int data;
    cin>>data;
    node* head=NULL,*tail=NULL;
    while(data!=-1){
        node *newnode=new node(data);
        if(head==NULL)                  {
            head=newnode;
            tail=newnode;
        }
        else{
            tail->next=newnode;
            tail=newnode;
        }
        cin>>data;
    }
    return head;
}
void print(node *head)
{
    node*temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}

int main()
{
    int i,j;
    node* head =takeinput();
    cin>>i;
    cin>>j;
    head=swap_nodes(head,i,j);
    print(head);
    return 0;
}

